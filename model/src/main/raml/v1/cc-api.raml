#%RAML 0.8

title: Compass -- REST services for compass services
version: v1
baseUri: https://cc.rest.api/{version}/

schemas:
  - fibonacci:       !include fibonacci.json
  - apimessage:      !include apimessage.json
  - posts:           !include posts.json
  - user:            !include user.json
  - userCollection:  !include userCollection.json

/helloWorld:
  get:
    description: returns hello world string
    responses:
      200:
        body:
          text/plain:

/fibonacci/{number}:
  uriParameters:
    number:
      type: integer
  get:
    description: returns the first N numbers of a Fibonacci series specified by number
    responses:
      200:
        body:
          application/json:
            schema: fibonacci
      400:
        body:
          application/json:
            schema: apimessage

/external/posts:
  get:
    description: returns response from an external Posts service
    responses:
      200:
        body:
          application/json:
            schema: posts
      500:
        body:
          application/json:
            schema: apimessage

/user:
  get:
    description: get list of users
    queryParameters:
      pageSize:
        description: page size of the result
        type: integer
      pageNumber:
        description: page number of the result set
        type: integer
    responses:
      200:
        body:
          application/json:
            schema: userCollection
      400:
        body:
          application/json:
            schema: apimessage
  post:
    description: creates a new user
    body:
      application/json:
        schema: user
    responses:
      200:
        body:
          application/json:
            schema: user
  /{id}:
    uriParameters:
      id:
        type: integer
    get:
      description: returns a user by id
      responses:
        200:
          body:
            application/json:
              schema: user
        404:
          body:
            application/json:
              schema: apimessage
    put:
      description: modifies user specified by id
      body:
        application/json:
          schema: user
      responses:
        200:
          body:
            application/json:
              schema: user
        404:
          body:
            application/json:
              schema: apimessage
    delete:
      description: deletes a user entity
      responses:
        200:
          body:
            application/json:
              schema: apimessage
        404:
          body:
            application/json:
              schema: apimessage



